{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAI3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAiBC,SAE7CA,MAZPR,EAAKe,iBAAiB,UAgBtB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAOC,OAAOf,EAAUgB,OACxBC,EAASF,OAAOd,EAAYe,OAClC,IAAIZ,EAAQW,OAAOhB,EAAWiB,OAE9B,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChChB,EAEAgB,EAAAd,GAAAe,MAAAC,GAAa1B,EAAI2B,OACdC,QAAAF,KAAAG,OAAAH,GAAoB1B,EAAY2B,OAChCG,QAAAJ,KAEHhB,GAASU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector(\"input[name='delay']\");\nconst stepInput = document.querySelector(\"input[name='step']\");\nconst amountInput = document.querySelector(\"input[name='amount']\");\n\nform.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n  let delay = Number(delayInput.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    /* Вызываем Промисы с помощью цикла*/\n\n    createPromise(i, delay)\n      .then(data => Notify.success(data))\n      .catch(data => Notify.failure(data));\n\n    delay += step;\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","step","Number","value","amount","i","then","data","Notify","success","catch","failure"],"version":3,"file":"03-promises.045422da.js.map"}